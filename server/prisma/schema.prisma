generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model animal {
  id                          Int       @id @default(autoincrement())
  name                        String    @db.VarChar(255)
  species                     String    @db.VarChar(255)
  ring                        String    @db.VarChar(255)
  gender                      String    @db.VarChar(255)
  birthdate                   String    @db.VarChar(255)
  pair_id                     Int?
  user_id                     Int?
  created_at                  DateTime? @default(now()) @db.Timestamp(0)
  updated_at                  DateTime? @default(now()) @db.Timestamp(0)
  image                       String?   @db.VarChar(255)
  users                       users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "animal_ibfk_1")
  pair                        pair?     @relation(fields: [pair_id], references: [id], onDelete: Cascade, map: "animal_ibfk_2")
  pair_pair_male_idToanimal   pair[]    @relation("pair_male_idToanimal")
  pair_pair_female_idToanimal pair[]    @relation("pair_female_idToanimal")

  @@index([user_id], map: "user_id")
  @@index([pair_id], map: "pair_id")
}

model animal_for_sale {
  id         Int       @id @default(autoincrement())
  name       String    @db.VarChar(255)
  species    String    @db.VarChar(255)
  birthdate  String    @db.VarChar(255)
  price      Decimal   @db.Decimal(10, 2)
  user_id    Int?
  gender     String    @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "animal_for_sale_ibfk_1")

  @@index([user_id], map: "user_id")
}

model birth {
  id            Int       @id @default(autoincrement())
  date          String    @db.VarChar(255)
  number_babies String    @db.VarChar(255)
  pair_id       Int
  created_at    DateTime? @default(now()) @db.Timestamp(0)
  updated_at    DateTime? @default(now()) @db.Timestamp(0)
  pair          pair      @relation(fields: [pair_id], references: [id], onDelete: Cascade, map: "birth_ibfk_1")

  @@index([pair_id], map: "pair_id")
}

model event {
  id          Int       @id @default(autoincrement())
  title       String    @db.VarChar(255)
  description String?   @db.Text
  address     String    @db.VarChar(255)
  date        String    @db.VarChar(255)
  user_id     Int?
  created_at  DateTime? @default(now()) @db.Timestamp(0)
  updated_at  DateTime? @default(now()) @db.Timestamp(0)
  users       users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "event_ibfk_1")

  @@index([user_id], map: "user_id")
}

model pair {
  id                            Int       @id @default(autoincrement())
  male_id                       Int
  female_id                     Int
  created_at                    DateTime? @default(now()) @db.Timestamp(0)
  updated_at                    DateTime? @default(now()) @db.Timestamp(0)
  animal                        animal[]
  birth                         birth[]
  animal_pair_male_idToanimal   animal    @relation("pair_male_idToanimal", fields: [male_id], references: [id], onDelete: Cascade, map: "pair_ibfk_1")
  animal_pair_female_idToanimal animal    @relation("pair_female_idToanimal", fields: [female_id], references: [id], onDelete: Cascade, map: "pair_ibfk_2")

  @@index([female_id], map: "female_id")
  @@index([male_id], map: "male_id")
}

model stock {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar(255)
  type          String    @db.VarChar(255)
  description   String?   @db.Text
  quantity      String    @db.VarChar(255)
  purchase_date String    @db.VarChar(255)
  user_id       Int?
  created_at    DateTime? @default(now()) @db.Timestamp(0)
  updated_at    DateTime? @default(now()) @db.Timestamp(0)
  users         users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "stock_ibfk_1")

  @@index([user_id], map: "user_id")
}

model users {
  id              Int               @id @default(autoincrement())
  firstName       String            @db.VarChar(100)
  lastName        String            @db.VarChar(100)
  email           String            @unique(map: "email") @db.VarChar(100)
  address         String?           @db.VarChar(100)
  city            String?           @db.VarChar(100)
  country         String?           @db.VarChar(100)
  password        String?           @db.VarChar(100)
  created_at      DateTime?         @default(now()) @db.Timestamp(0)
  updated_at      DateTime?         @default(now()) @db.Timestamp(0)
  animal          animal[]
  animal_for_sale animal_for_sale[]
  event           event[]
  stock           stock[]
}
